#### general settings
name: latent-reffusion-splitting
use_tb_logger: true
model: latent_denoising
distortion: splitting
gpu_ids: [0]

sde:
  max_sigma: 50
  T: 10
  sample_T: 100
  schedule: cosine # linear, cosine
  eps: 0.005

degradation: # for some synthetic dataset that only have GTs
  # sigma: 25
  noise_type: G # Gaussian noise: G

  # for super-resolution
  # scale: 4
  
#### datasets
datasets:
  train:
    name: Train_Dataset
    mode: LQGT_splitting
    fpath: /group/jug/ashesh/data/microscopy/OptiMEM100x014.tif
    downscale_factor: 6

    use_shuffle: true
    n_workers: 4  # per GPU
    batch_size: 16
    GT_size: 128
    LR_size: 128
    # use_flip: true
    # use_rot: true
    color: null
    
    # splitting dataset specific 
    channel_1: 2
    channel_2: 3
    target_channel_idx: 1 # This can only be either 0 or 1. 
    ch1_weight: 0.5
    datasplit_type: train
    enable_rotation_aug: true
    enable_random_cropping: true
    clip_percentile: 0.995
    channelwise_quantile: false
    background_quantile: 0.
    clip_background_noise_to_zero: false
    skip_normalization_using_mean: false
    val_fraction: 0.1
    test_fraction: 0.1
    empty_patch_max_val_threshold: 0.0
  val:
    datasplit_type: val
    name: Val_Dataset
    mode: LQGT_splitting
    fpath: /group/jug/ashesh/data/microscopy/OptiMEM100x014.tif
    downscale_factor: 6

    use_shuffle: false
    n_workers: 4  # per GPU
    batch_size: 16
    GT_size: 128
    LR_size: 128
    # use_flip: true
    # use_rot: true
    color: null
    
    # splitting dataset specific 
    channel_1: 2
    channel_2: 3
    target_channel_idx: 1 # This can only be either 0 or 1. 
    ch1_weight: 0.5
    enable_rotation_aug: false
    enable_random_cropping: false
    clip_percentile: 0.995
    channelwise_quantile: false
    background_quantile: 0.
    clip_background_noise_to_zero: false
    skip_normalization_using_mean: false
    val_fraction: 0.1
    test_fraction: 0.1
    empty_patch_max_val_threshold: 0.0


#### network structures
network_G:
  which_model: ConditionalNAFNet
  setting:
    img_channel: 8
    width: 64
    enc_blk_nums: [1, 1, 1, 28]
    middle_blk_num: 1
    dec_blk_nums: [1, 1, 1, 1]

network_L:
  which_model: UNet
  setting:
    in_ch: 1
    out_ch: 1
    ch: 8
    ch_mult: [4, 8, 8, 16]
    embed_dim: 8

#### path
path:
  pretrain_model_G: ~
  strict_load: true
  resume_state: ~
  pretrain_model_L: ~

#### training settings: learning rate scheme, loss
train:
  optimizer: Lion
  lr_G: !!float 3e-5
  lr_scheme: TrueCosineAnnealingLR
  beta1: 0.9
  beta2: 0.99
  niter: 400000
  warmup_iter: -1  # no warm up
  lr_steps: [200000, 400000, 600000]
  lr_gamma: 0.5
  eta_min: !!float 1e-7

  # criterion
  is_weighted: False
  loss_type: l1
  weight: 1.0

  manual_seed: 0
  val_freq: !!float 500

#### logger
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 1e4
